<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Mongodb | Dede Hermawan]]></title>
  <link href="http://dedehermawan.github.io/blog/categories/mongodb/atom.xml" rel="self"/>
  <link href="http://dedehermawan.github.io/"/>
  <updated>2018-08-01T11:26:14+07:00</updated>
  <id>http://dedehermawan.github.io/</id>
  <author>
    <name><![CDATA[Dede Hermawan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Berkenalan Dengan MongoDB]]></title>
    <link href="http://dedehermawan.github.io/blog/2017/11/23/berkenalan-dengan-mongodb/"/>
    <updated>2017-11-23T13:35:14+07:00</updated>
    <id>http://dedehermawan.github.io/blog/2017/11/23/berkenalan-dengan-mongodb</id>
    <content type="html"><![CDATA[<h2>Apasih MongoDB?</h2>

<p>MongoDB merupakan sebuah database yang memiliki konsep <em>NoSQL</em>. Istilah ini dapat diartikan secara awam dengan non relasional karena berbeda dengan MySQL yang merupakan RDBMS (<em>Relational DataBase Management System</em>).</p>

<p>Untuk memulai berkenalan kamu terlebih dahulu harus mengetahui beberapa perbedaan yang mendasar antara MongoDB dengan RDBMS, diantaranya:</p>

<ul>
<li><em>Table</em> pada MongoDB dikenal dengan <em>Collections</em></li>
<li><em>Rows</em> pada MongoDB dikenal dengan <em>Documents</em></li>
<li>Setiap <em>documents</em> bisa berisi kolom yang berbeda dengan <em>documents</em> lainnya</li>
<li>Sebuah <em>collections</em> dapat membuat setiap <em>documents</em> memiliki kolom yang sama dengan membuat parameter capped menjadi true saat pembuatan <em>collections</em></li>
<li>Query yang digunakan oleh MongoDB tidak menggunakan bahasa query seperti SQL, tapi menggunakan Javascript. Bahkan Anda dapat membuat semacam <em>stored procedure</em> yang ditulis menggunakan Javascript</li>
<li>Secara default setiap membuat <em>documents</em> baru, id dari <em>documents</em> tersebut akan tercipta otomatis. Jadi Anda tidak perlu membuat id sendiri jika membutuhkan id</li>
<li>dan masih banyak lagi</li>
</ul>


<!--more-->


<h2>Instalasi MongoDB</h2>

<p>Untuk proses instalasi sudah dijelaskan secara jelas di official <a href="https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/">web MongoDB nya</a><br/>
Apabila proses instalasi sudah selesai selanjutnya cek apakah MongoDB sudah terpasang dengan benar atau belum dengan mengetikan perintah di bawah ini:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mongo &ndash;version
</span><span class='line'>mongod &ndash;version</span></code></pre></td></tr></table></div></figure>
<img src="/images/mongo-version.png" title="&lsquo;image&rsquo; &lsquo;images&rsquo;" ></p>

<p>apabila muncul tampilan seperti gambar diatas berarti MongoDB sudah berhasil terpasang di <em>system</em> kita</p>

<h2>Cara mengoperasikan MongoDB</h2>

<p>Menyalakan server MongoDB
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo service mongod start</span></code></pre></td></tr></table></div></figure>
Mematikan server MongoDB
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo service mongod stop</span></code></pre></td></tr></table></div></figure>
Menyalakan ulang server MongoDB
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo service mongod restart</span></code></pre></td></tr></table></div></figure>
Melihat status server MongoDB
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo service mongod status</span></code></pre></td></tr></table></div></figure></p>

<h2>Mengakses server MongoDB</h2>

<p>Jalankan <strong>mongo</strong> <em>shell</em> di mesin yang sama dengan <strong>mongod</strong>. Gunakan perintah <strong>&ndash;host</strong> untuk spesifikasi alamat localhost dan port dari <strong>mongod</strong>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mongo &ndash;host 127.0.0.1:27017</span></code></pre></td></tr></table></div></figure>
Secara <em>default</em> database ketika kita masuk ke server MongoDB namanya adalah <em>test</em>
<img src="/images/sintaks-db.png" title="&lsquo;image&rsquo; &lsquo;images&rsquo;" ><br/>
Berikut penjelasan gambar diatas</p>

<ul>
<li><strong>db</strong>, untuk melihat database yang sedang aktif</li>
<li><strong>show dbs</strong>, untuk melihat daftar database</li>
<li><strong>use &lt;nama-database&gt;</strong> untuk membuat database baru, (database belum tersimpan karena data masih kosong)</li>
</ul>


<p>Sekarang ayo kita membuat sebuah koleksi(<em>collections</em>). Koleksi berisi kumpulan dokumen atau data dalam bentuk JSON, kalau di SQL kita menyebutnya dengan <em>record</em>/baris<br/>
Koleksi bisa di buat dengan perintah:
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db.createCollections(&ldquo;nama_koleksi&rdquo;)</span></code></pre></td></tr></table></div></figure>
Atau bisa juga otomatis terbuat pada saat <em>insert</em> data
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db.&lt;koleksi>.insert(&lt;data>)</span></code></pre></td></tr></table></div></figure>
atau
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db.&lt;koleksi>.save(&lt;data>)</span></code></pre></td></tr></table></div></figure></p>

<ul>
<li>koleksi adalah nama koleksi yang akan dibuat</li>
<li>data adalah data yang akan disimpan ke dalam koleksi dengan format JSON</li>
</ul>


<p>Sebagai contoh kita akan membuat koleksi dengan nama buku, <strong>db.koleksi.insert</strong>
<img src="/images/collection-insert.png" title="&lsquo;image&rsquo; &lsquo;images&rsquo;" ><br/>
Menampilkan semua data pada koleksi, <strong>db.koleksi.find().pretty()</strong>, pretty() berfungsi untuk mempercantik format tampilan JSON supaya lebih mudah di baca
<img src="/images/collection-find.png" title="&lsquo;image&rsquo; &lsquo;images&rsquo;" ><br/>
Menampilkan data pada koleksi berdasarkan kondisi/query, <strong>db.koleksi.find({query}).pretty()</strong>
<img src="/images/collection-find-kondisi.png" title="&lsquo;image&rsquo; &lsquo;images&rsquo;" ><br/>
Mengubah data menggunakan perintah <em>update</em>, <strong>db.koleksi.update({query}, {data-baru})</strong>
<img src="/images/collection-update.png" title="&lsquo;image&rsquo; &lsquo;images&rsquo;" ><br/>
Diatas kita mengupdate buku dengan judul &ldquo;Belajar membaca&rdquo; ditambahkan harga senilai 15000, sehingga apabila kita tampilkan ulang data dengan judul &ldquo;Belajar membaca&rdquo; akan memiliki harga seperti yang di insertkan</p>

<p><img src="/images/collection-find-update.png" title="&lsquo;image&rsquo; &lsquo;images&rsquo;" ><br/>
Untuk menghapus koleksi gunakan perintah, <strong>db.koleksi.remove({query})</strong>
<img src="/images/collection-hapus.png" title="&lsquo;image&rsquo; &lsquo;images&rsquo;" ><br/>
Apabila kita ingin menghapus semua data dalam koleksi, kita kosongkan saja nilai query-nya</p>

<h2>Menghapus database dan koleksi</h2>

<p>menghapus koleksi
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db.koleksi.drop();</span></code></pre></td></tr></table></div></figure>
Menghapus database
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>db.dropDatabase();</span></code></pre></td></tr></table></div></figure>
Mungkin cukup sekian dulu perkenalan dengan MongoDB nya, semoga bermanfaat.</p>
]]></content>
  </entry>
  
</feed>
