<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[My Octopress Blog]]></title>
  <link href="http://dedehermawan.github.io/atom.xml" rel="self"/>
  <link href="http://dedehermawan.github.io/"/>
  <updated>2017-12-30T02:05:03+07:00</updated>
  <id>http://dedehermawan.github.io/</id>
  <author>
    <name><![CDATA[Dede Hermawan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rails Authentication]]></title>
    <link href="http://dedehermawan.github.io/blog/2017/12/30/rails-authentication/"/>
    <updated>2017-12-30T02:05:03+07:00</updated>
    <id>http://dedehermawan.github.io/blog/2017/12/30/rails-authentication</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Membuat Aplikasi Dengan Ruby on Rails]]></title>
    <link href="http://dedehermawan.github.io/blog/2017/11/20/membuat-aplikasi-dengan-ruby-on-rails/"/>
    <updated>2017-11-20T13:11:06+07:00</updated>
    <id>http://dedehermawan.github.io/blog/2017/11/20/membuat-aplikasi-dengan-ruby-on-rails</id>
    <content type="html"><![CDATA[<p>Sebelumnya saya sudah memposting bagaimana cara untuk install ruby on rails atau lebih di kenal dengan <code>rails</code> saja, itu artinya sekarang kita akan mencoba membuat aplikasi pertamamu dengan rails, apabila ada yang belum menginstall ruby maupun rails nya silakan baca postingan tentang bagaimana cara menginstall ruby dan rails <a href="http://dedehermawan.github.io/blog/2017/11/18/install-ruby-on-rails-di-ubuntu-16-dot-04/">disini</a><br/>
Oke kalau rails sudah terpasang di sistem kamu, langsung saja ketikkan perintah berikut di terminal</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rails new NamaAplikasi</span></code></pre></td></tr></table></div></figure>


<p>Perintah di atas otomatis akan membuat aplikasi rails dengan nama <strong>NamaAplikasi</strong>.<br/>
Untuk mengetahui perintah lain pada saat mau membuat aplikasi rails silakan gunakan perintah berikut</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rails new -h</span></code></pre></td></tr></table></div></figure>


<p>Perintah tersebut akan menampilkan perintah-perintah apa saja yang bisa di gunakan pada saat mau <em>create</em> aplikasi baru dengan rails</p>

<!--more-->


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Usage:
</span><span class='line'>  rails new APP_PATH [options]
</span><span class='line'>
</span><span class='line'>Options:
</span><span class='line'>  -r, [--ruby=PATH]                                      # Path to the Ruby binary of your choice
</span><span class='line'>                                                         # Default: /home/aliya/.rvm/rubies/ruby-2.3.1/bin/ruby
</span><span class='line'>  -m, [--template=TEMPLATE]                              # Path to some application template (can be a filesystem path or URL)
</span><span class='line'>  -d, [--database=DATABASE]                              # Preconfigure for selected database (options: mysql/oracle/postgresql/sqlite3/frontbase/ibm_db/sqlserver/jdbcmysql/jdbcsqlite3/jdbcpostgresql/jdbc)
</span><span class='line'>                                                         # Default: sqlite3
</span><span class='line'>  -j, [--javascript=JAVASCRIPT]                          # Preconfigure for selected JavaScript library
</span><span class='line'>                                                         # Default: jquery
</span><span class='line'>      [--skip-gemfile], [--no-skip-gemfile]              # Don't create a Gemfile
</span><span class='line'>  -B, [--skip-bundle], [--no-skip-bundle]                # Don't run bundle install
</span><span class='line'>  -G, [--skip-git], [--no-skip-git]                      # Skip .gitignore file
</span><span class='line'>      [--skip-keeps], [--no-skip-keeps]                  # Skip source control .keep files
</span><span class='line'>  -M, [--skip-action-mailer], [--no-skip-action-mailer]  # Skip Action Mailer files
</span><span class='line'>  -O, [--skip-active-record], [--no-skip-active-record]  # Skip Active Record files
</span><span class='line'>  -P, [--skip-puma], [--no-skip-puma]                    # Skip Puma related files
</span><span class='line'>  -C, [--skip-action-cable], [--no-skip-action-cable]    # Skip Action Cable files
</span><span class='line'>  -S, [--skip-sprockets], [--no-skip-sprockets]          # Skip Sprockets files
</span><span class='line'>      [--skip-spring], [--no-skip-spring]                # Don't install Spring application preloader
</span><span class='line'>      [--skip-listen], [--no-skip-listen]                # Don't generate configuration that depends on the listen gem
</span><span class='line'>  -J, [--skip-javascript], [--no-skip-javascript]        # Skip JavaScript files
</span><span class='line'>      [--skip-turbolinks], [--no-skip-turbolinks]        # Skip turbolinks gem
</span><span class='line'>  -T, [--skip-test], [--no-skip-test]                    # Skip test files
</span><span class='line'>      [--dev], [--no-dev]                                # Setup the application with Gemfile pointing to your Rails checkout
</span><span class='line'>      [--edge], [--no-edge]                              # Setup the application with Gemfile pointing to Rails repository
</span><span class='line'>      [--rc=RC]                                          # Path to file containing extra configuration options for rails command
</span><span class='line'>      [--no-rc], [--no-no-rc]                            # Skip loading of extra configuration options from .railsrc file
</span><span class='line'>      [--api], [--no-api]                                # Preconfigure smaller stack for API only apps
</span><span class='line'>
</span><span class='line'>Runtime options:
</span><span class='line'>  -f, [--force]                    # Overwrite files that already exist
</span><span class='line'>  -p, [--pretend], [--no-pretend]  # Run but do not make any changes
</span><span class='line'>  -q, [--quiet], [--no-quiet]      # Suppress status output
</span><span class='line'>  -s, [--skip], [--no-skip]        # Skip files that already exist
</span><span class='line'>
</span><span class='line'>Rails options:
</span><span class='line'>  -h, [--help], [--no-help]        # Show this help message and quit
</span><span class='line'>  -v, [--version], [--no-version]  # Show Rails version number and quit
</span><span class='line'>
</span><span class='line'>Description:
</span><span class='line'>    The 'rails new' command creates a new Rails application with a default
</span><span class='line'>    directory structure and configuration at the path you specify.
</span><span class='line'>
</span><span class='line'>    You can specify extra command-line arguments to be used every time
</span><span class='line'>    'rails new' runs in the .railsrc configuration file in your home directory.
</span><span class='line'>
</span><span class='line'>    Note that the arguments specified in the .railsrc file don't affect the
</span><span class='line'>    defaults values shown above in this help message.
</span><span class='line'>
</span><span class='line'>Example:
</span><span class='line'>    rails new ~/Code/Ruby/weblog
</span><span class='line'>
</span><span class='line'>    This generates a skeletal Rails installation in ~/Code/Ruby/weblog.</span></code></pre></td></tr></table></div></figure>


<p>Setelah kamu sukses membuat aplikasi tersebut berpindahlah ke folder aplikasi tersebut</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd NamaAplikasi</span></code></pre></td></tr></table></div></figure>


<p>Lalu ketikkan perintah berikut untuk menjalankan aplikasi railsnya</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rails s</span></code></pre></td></tr></table></div></figure>


<p>Apabila di terminal muncul kata-kata seperti berikut</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>=> Booting Puma
</span><span class='line'>=> Rails 5.1.4 application starting in development 
</span><span class='line'>=> Run `rails server -h` for more startup options
</span><span class='line'>Puma starting in single mode...
</span><span class='line'>* Version 3.11.0 (ruby 2.4.0-p0), codename: Love Song
</span><span class='line'>* Min threads: 5, max threads: 5
</span><span class='line'>* Environment: development
</span><span class='line'>* Listening on tcp://0.0.0.0:3000
</span><span class='line'>Use Ctrl-C to stop</span></code></pre></td></tr></table></div></figure>


<p>Itu tandanya kamu telah berhasil menjalankan aplikasi rails kamu, untuk mengeceknya silakan buka browser dengan alamat <a href="localhost:3000">http://localhost:3000</a>.<br/>
Jika tampilan pada browser kamu seperti gambar di bawah ini.</p>

<p><img class="left" src="http://dedehermawan.github.io/images/rails-home.png" title="image" alt="images"></p>

<p>Berarti kamu sudah berhasil membuat aplikasi rails di komputermu.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Ruby on Rails Di Ubuntu 16.04]]></title>
    <link href="http://dedehermawan.github.io/blog/2017/11/18/install-ruby-on-rails-di-ubuntu-16-dot-04/"/>
    <updated>2017-11-18T22:06:42+07:00</updated>
    <id>http://dedehermawan.github.io/blog/2017/11/18/install-ruby-on-rails-di-ubuntu-16-dot-04</id>
    <content type="html"><![CDATA[<h3>Install Ruby</h3>

<p>Untuk memastikan kita memiliki semua yang diperlukan untuk dukungan Webpacker di Rails, pertama-tama kita tambahkan repository NodeJs dan Yarn ke sistem kita sebelum menginstall.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
</span><span class='line'>curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
</span><span class='line'>echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
</span><span class='line'>
</span><span class='line'>sudo apt-get update
</span><span class='line'>sudo apt-get install git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev python-software-properties libffi-dev nodejs yarn</span></code></pre></td></tr></table></div></figure>


<p>Selanjutnya kita akan menginstall ruby dengan menggunakan salah satu dari 3  cara, yaitu yang pertama yang paling banyak di gunakan untuk install ruby yaitu menggunakan <code>rbenv</code>, yang kedua menggunakan <code>rvm</code> dan yang ketiga adalah dengan cara langsung mengambil dari sumbernya.<!-- more -->
Tapi karena saya menggunakan rvm untuk menginstall ruby di sistem saya maka saya akan membahas install ruby dengan rvm saja hhe..untuk cara selain rvm kamu bisa lihat <a href="https://gorails.com/setup/ubuntu/16.04#ruby">disini</a>.<br/>
Oke untuk menginstall ruby dengan rvm masukan perintah ini di terminal.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install libgdbm-dev libncurses5-dev automake libtool bison libffi-dev
</span><span class='line'>gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
</span><span class='line'>curl -sSL https://get.rvm.io | bash -s stable
</span><span class='line'>source ~/.rvm/scripts/rvm
</span><span class='line'>rvm install 2.4.0
</span><span class='line'>rvm use 2.4.0 --default</span></code></pre></td></tr></table></div></figure>


<p>Coba perhatikan potongan perintah di atas <code>rvm install 2.4.0</code> itu artinya kita menginstall ruby dengan versi 2.4.0, kamu bisa cek versi lain/terbaru dari ruby <a href="https://www.ruby-lang.org/en/downloads/">disini</a>.<br/>
Langkah terakhir jalankan install bundler</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install bundler</span></code></pre></td></tr></table></div></figure>


<p>Coba sekarang cek apakah ruby sudah terinstall dengan benar</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ruby -v
</span><span class='line'># ruby 2.4.0p0 (2016-12-24 revision 57164) [x86_64-linux]</span></code></pre></td></tr></table></div></figure>


<p>Apabila muncul kata-kata seperti di atas maka berarti proses instal ruby kamu berhasil.</p>

<h3>Install Rails</h3>

<p>Semenjak Rails mengikutsertakan banyak dependency akhir-akhir ini, kita butuh menginstall Javascript Runtime seperti NodeJS, Ini memungkinkan kamu menggunakan Coffeescript dan Asset Pipeline di Rails yang menggabungkan dan meminimalkan javascript untuk menyediakan production environment secara lebih cepat.<br/>
Untuk menginstall NodeJs, kita akan menambahkannya dengan menggunakan ofisial repositori</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
</span><span class='line'>sudo apt-get install -y nodej</span></code></pre></td></tr></table></div></figure>


<p>Selanjutnya install Rails dengan gem</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install rails</span></code></pre></td></tr></table></div></figure>


<p>Sekarang coba cek dengan menjalankan <code>rails -v</code> untuk memastikan semuanya terinstal dengan benar</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rails -v
</span><span class='line'># Rails 5.1.4</span></code></pre></td></tr></table></div></figure>


<p>Dan lagi-lagi apabila muncul kata-kata <code>Rails 5.1.4</code> berarti proses instal rails kamu sukses.</p>

<p>Oke sekian penjelasan mengenai bagaimana cara menginstall ruby on rails di ubuntu, untuk postingan selanjutnya kita akan mencoba bagaimana membuat web dengan menggunakan framework Rails, jadi tetap ikuti blog saya ini ya</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Koneksi Ke Github Dengan SSH]]></title>
    <link href="http://dedehermawan.github.io/blog/2017/11/17/koneksi-ke-github-dengan-ssh/"/>
    <updated>2017-11-17T23:02:54+07:00</updated>
    <id>http://dedehermawan.github.io/blog/2017/11/17/koneksi-ke-github-dengan-ssh</id>
    <content type="html"><![CDATA[<h3>Tentang SSH</h3>

<p>Menggunakan SSH kamu dapat terhubung dan mengotentifikasi untuk meremote server dan service, dengan SSH keys, kamu dapat terhubung ke Github tanpa harus menginputkan username dan password setiap kali mengunjunginya.</p>

<h3>Cek ketersediaan SSH keys</h3>

<p>Buka terminal<br/>
Ketikkan <code>ls -al ~/.ssh</code> untuk melihat apakah SSH keys sudah tersedia atau belum</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ls -al ~/.ssh
</span><span class='line'># List the file in your .ssh directory, if they exist</span></code></pre></td></tr></table></div></figure>


<p>Cek daftar direktori untuk melihat apakah kamu sudah mempunyai public SSH key.<br/>
Secara default, nama file dari public keys biasanya:<!-- more --><br/>
* id_dsa.pub<br/>
* idecdsa.pub<br/>
* id_ed25519.pub<br/>
* id.rsa.pub<br/>
Apabila kamu tidak memiliki pasangan public dan private key, atau tidak ada satupun yang terhubung ke Github, maka langkah pertama adalah <strong>generate SSH key baru</strong><br/>
Tapi apabila kamu memiliki pasangan public dan private key (contoh <em>id_rsa_pub</em> dan <em>id_rsa</em>) maka yang harus kamu lakukan adalah tambahkan SSH key kamu ke ss-agent</p>

<h3>Generate SSH key</h3>

<p>Pastekan text dibawah ini, ganti alamat emailnya dengan alamat email Github kamu</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh-keygen -t rsa -b 4096 -C "your_email@example.com"</span></code></pre></td></tr></table></div></figure>


<p>Ini akan membuat SSH key baru, dengan menggunakan email yang telah di daftarkan sebelumnya sebagai label</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Generating public/private rsa key pair.</span></code></pre></td></tr></table></div></figure>


<p>Silakan isi pertanyaan yang muncul (passphrase bisa di kosongkan juga)</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Enter a file in which to save the key (/home/you/.ssh/id_rsa): [Press enter]
</span><span class='line'>Enter passphrase (empty for no passphrase): [Type a passphrase]
</span><span class='line'>Enter same passphrase again: [Type passphrase again]</span></code></pre></td></tr></table></div></figure>


<h3>Tambahkan SSH key ke ssh-agent</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>eval "$(ssh-agent -s)"
</span><span class='line'># Agent pid 59566
</span><span class='line'>ssh-add ~/.ssh/id_rsa</span></code></pre></td></tr></table></div></figure>


<h3>Tambahkan SSH key ke akun Github</h3>

<p>Copy dulu SSH key di <em>id_rsa_pub</em> ke clipboard.<br/>
Login ke Github dan klik profile foto di kanan atas, lalu klik <strong>setting</strong> -> <strong>SSH and GPG keys</strong> -> <strong>New SSH key</strong> atau <strong>Add SSH key</strong><br/>
Di kolom title masukkan deskripsi label untuk key baru tersebut, lalu pada kolom key pastekan SSH key yang sudah di copy di <em>id_rsa_pub</em> sebelumnya, klik <strong>Add SSH key</strong> jika muncul pertanyaan silakan masukkan  password Github anda<br/>
Untuk mengecek apakah SSH key kita sudah terhubung ke Github silakan masukan perintah di bawah ini di terminal</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh -T git@github.com
</span><span class='line'># Attempts to ssh to GitHub</span></code></pre></td></tr></table></div></figure>


<p>Dan apabila muncul pesan seperti berikut itu tandanya kamu sudah berhasil menghubungkan SSH key ke github</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Hi username! You've successfully authenticated, but GitHub does not
</span><span class='line'>provide shell access.</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cara Membuat Blog Dengan Octopress]]></title>
    <link href="http://dedehermawan.github.io/blog/2017/11/16/cara-membuat-blog-dengan-octopress/"/>
    <updated>2017-11-16T15:33:08+07:00</updated>
    <id>http://dedehermawan.github.io/blog/2017/11/16/cara-membuat-blog-dengan-octopress</id>
    <content type="html"><![CDATA[<p>Sebelum mulai pastikan sistem anda<br/>
1. Sudah terinstall Git<br/>
2. Sudah terinstall ruby</p>

<h3>Install Octopress</h3>

<p>Buka terminal, lalu git clone dari repo Octopressnya</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git clone git://github.com/imathis/octopress.git octopress  
</span><span class='line'>cd octopress</span></code></pre></td></tr></table></div></figure>


<p>Selanjutnya, Install dependecy</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install bundler
</span><span class='line'>bundle install</span></code></pre></td></tr></table></div></figure>


<p>Install theme default dari Octopress</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake install</span></code></pre></td></tr></table></div></figure>


<!-- more -->


<h3>Membuat post</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake "new_post[Judul dari post]"</span></code></pre></td></tr></table></div></figure>


<p>Apabila di terminal muncul kata-kata <code>Creating new post: source/_posts/2017-11-02-judul-dari-post.markdown</code><br/>
itu tandanya kamu sudah berhasil membuat post</p>

<p>Untuk melihat hasil pembuatan post kita di browser caranya masukan perintah ini di terminal</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake preview</span></code></pre></td></tr></table></div></figure>


<p>Selanjutnya akses di browser dengan alamat <code>http://localhost:4000</code><br/>
untuk keluar dari mode preview tekan tombol Ctrl+c di keyboard</p>

<h3>Deploy ke Github</h3>

<p>Buat <a href="https://github.com/repositories/new">repository baru di Github</a> dan beri nama repo tersebut dengan format <code>username.github.io</code>, dimana <code>username</code> tersebut adalah user name Github kamu atau nama organisasi.<br/>
Github menggunakan branch master sebagai public directory di web server, tapi di octopress ini kamu bekerja di branch source oleh karena itu kamu harus commit dan push konten hasil generate ke github ke branch master, Untuk itu octopress memiliki perintah untuk konfigurasi yang akan membantu kamu menangani semuanya itu.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake setup_github_pages</span></code></pre></td></tr></table></div></figure>


<p>Perintah tersebut akan memintamu memasukan alamat URL repo github kamu, tinggal pilih mau menggunakan SSH atau HTTPS, contoh saya menggunakan yang HTTPS <code>https://github.com/username/username.github.io</code>
Lalu jalankan</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake generate
</span><span class='line'>rake deploy</span></code></pre></td></tr></table></div></figure>


<p>Jangan lupa untuk commit source dari blog kamu</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">git</span> <span class="n">add</span> <span class="o">.</span>
</span><span class='line'><span class="n">git</span> <span class="n">commit</span> <span class="o">-</span><span class="n">m</span> <span class="s2">&quot;pesan kamu&quot;</span>
</span><span class='line'><span class="n">git</span> <span class="n">push</span> <span class="n">origin</span> <span class="n">source</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
